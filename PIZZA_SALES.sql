CREATE DATABASE IF NOT EXISTS PIZZASALES;

USE PIZZASALES;

CREATE TABLE IF NOT EXISTS ORDERS(
order_id INT NOT NULL PRIMARY KEY,
date DATE NOT NULL,
time TIME NOT NULL);

CREATE TABLE IF NOT EXISTS ORDER_DETAILS(
order_details_id INT NOT NULL PRIMARY KEY,
order_id INT NOT NULL,
pizza_id VARCHAR(50) NOT NULL,
quantity INT NOT NULL);

CREATE TABLE IF NOT EXISTS PIZZA(
pizza_id VARCHAR(50) NOT NULL PRIMARY KEY,
pizza_type_id VARCHAR(20) NOT NULL,
size TEXT(5) NOT NULL,
price DECIMAL(5,2) NOT NULL);

CREATE TABLE IF NOT EXISTS PIZZA_TYPES(
pizza_type_id VARCHAR(20) NOT NULL PRIMARY KEY,
name VARCHAR(100) NOT NULL,
category TEXT(15) NOT NULL,
ingredients VARCHAR(100) NOT NULL);

--------------------------------------------- FEATURE ENGINEERING ----------------------------------------------------

-------------------------------------------- CREATE COLUMN time_of_day ----------------------------------------------------

ALTER TABLE ORDERS ADD COLUMN time_of_day VARCHAR (20);

UPDATE ORDERS
SET TIME_OF_DAY = (
CASE
WHEN TIME BETWEEN "00:00:00" AND "11:59:59"THEN "MORNING"
WHEN TIME BETWEEN "12:00:00"AND "15:59:59" THEN "AFTERNOON"
ELSE "EVENING"
END);

----------------------------------------- CREATE TABLE day_name ------------------------------------------------

ALTER TABLE ORDERS ADD COLUMN day_name VARCHAR (20);

UPDATE ORDERS
SET day_name = DAYNAME(DATE);

------------------------------------------- CREATE TABLE month ------------------------------------------------

ALTER TABLE ORDERS ADD COLUMN month VARCHAR(20);

UPDATE ORDERS
SET month = MONTHNAME(DATE);

------------------------------------  CREATE JOINS TO GENERATE A SINGLE TABLE FOR THE ANALYSIS --------------------------------

CREATE TABLE PIZZAS
(SELECT 
PT.PIZZA_TYPE_ID,
PT.NAME,
PT.CATEGORY,
P.PIZZA_ID,
P.SIZE,
P.PRICE
FROM PIZZA_TYPES AS PT
JOIN PIZZA AS P
ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID);

SELECT * FROM PIZZAS;

CREATE TABLE SALES_ORDERS
(SELECT 
OD.ORDER_DETAILS_ID,
O.ORDER_ID,
OD.PIZZA_ID,
OD. QUANTITY,
O.DATE,
O.DAY_NAME,
O.MONTH,
O.TIME_OF_DAY
FROM ORDERS AS O
JOIN ORDER_DETAILS AS OD
ON O.ORDER_ID = OD.ORDER_ID);

SELECT * FROM SALES_ORDERS;

CREATE TABLE TOTAL_PIZZA_SALES
(SELECT
SO.ORDER_DETAILS_ID,
SO.ORDER_ID,
PZ.PIZZA_TYPE_ID,
PZ.PIZZA_ID,
PZ.NAME,
PZ.CATEGORY,
PZ.SIZE,
SO.DATE,
SO.DAY_NAME,
SO.MONTH,
SO.TIME_OF_DAY,
SO.QUANTITY,
PZ.PRICE
FROM SALES_ORDERS AS SO
JOIN PIZZAS AS PZ
ON PZ.PIZZA_ID = SO.PIZZA_ID);

--------------------------------- CREATE NEW COLUMN COGS: COST OF GOODS SOLD---------------------------------------

ALTER TABLE TOTAL_PIZZA_SALES ADD COLUMN COGS DECIMAL(12,2);

UPDATE TOTAL_PIZZA_SALES
SET COGS = QUANTITY * PRICE;

----------------------------------- SELECT DISTINCT ITEMS IN THE DATA --------------------------------------

------------------------------------ DISTINCT PIZZA_TYPE_ID ---------------------------------------

SELECT 
DISTINCT PIZZA_TYPE_ID
FROM 
TOTAL_PIZZA_SALES;

--------------------------------- DISTINCT NAME -------------------------------------------------

SELECT 
DISTINCT NAME 
FROM
TOTAL_PIZZA_SALES;

-------------------------------------------- DISTINCT CATEGORIES -----------------------------------------

SELECT 
DISTINCT CATEGORY
FROM 
TOTAL_PIZZA_SALES;

SELECT 
DISTINCT SIZE
FROM 
TOTAL_PIZZA_SALES;

---------------------------- CALCULATE TOTAL REVENUE GENERATED -------------------------------------------

SELECT
SUM(COGS) AS TOTAL_REVENUE_GENERATED
FROM
TOTAL_PIZZA_SALES;

--------------- SALES BY SIZE -------------------------

SELECT
SIZE,
COUNT(QUANTITY) AS CNT
FROM 
TOTAL_PIZZA_SALES
GROUP BY SIZE;

-------------------------------- SALES BY CATEGORY --------------------------------------

SELECT
CATEGORY,
COUNT(CATEGORY) AS CONT
FROM
TOTAL_PIZZA_SALES
GROUP BY CATEGORY;

----------------------------------- TOP 3 NAMES OF PIZZAS THAT GENERATES THE MOST REVENUE --------------------------------------

SELECT
NAME,
SUM(COGS) AS REVENUE_GENERATED
FROM 
TOTAL_PIZZA_SALES
GROUP BY NAME
ORDER BY REVENUE_GENERATED DESC
LIMIT 3;

------------------------------------- REVENUE GENERATED BY CATEGORY --------------------------------------

SELECT
CATEGORY,
SUM(COGS) AS REVENUE_GENERATED
FROM 
TOTAL_PIZZA_SALES
GROUP BY CATEGORY;

--------------------------------- WHAT TIME OF THE DAY IS MOST PIZZA SOLD ----------------------------------------

SELECT
TIME_OF_DAY,
COUNT(QUANTITY) AS COUNT
FROM TOTAL_PIZZA_SALES
GROUP BY TIME_OF_DAY
ORDER BY COUNT DESC;

-------------------------------------- WHAT DAYS ARE MOST PIZZAS SOLD -----------------------------

SELECT 
DAY_NAME,
COUNT(QUANTITY) AS COUNT
FROM TOTAL_PIZZA_SALES
GROUP BY DAY_NAME
ORDER BY COUNT DESC;

-------------------------------------- REVENUE GENERATED BY DAYS ------------------------------

SELECT
DAY_NAME,
SUM(COGS) AS REVENUE_GENERATED
FROM 
TOTAL_PIZZA_SALES
GROUP BY DAY_NAME
ORDER BY REVENUE_GENERATED DESC
LIMIT 3;

------------------------------------ TOP 5 MONTHS WITH THE MOST REVENUE GENRATED -------------------------------------------

SELECT
MONTH,
SUM(COGS) AS REVENUE_GENERATED
FROM 
TOTAL_PIZZA_SALES
GROUP BY MONTH
ORDER BY REVENUE_GENERATED DESC
LIMIT 5;





